[gd_scene load_steps=3 format=2]

[ext_resource path="res://Objects/Powers/HomingMissile.tscn" type="PackedScene" id=1]

[sub_resource type="GDScript" id=1]

resource_name = "HomingShooter.gd"
script/source = "extends Node2D

export (PackedScene) var homingMissile
export (float) var minFireRate
export (float) var maxFireRate
var fireRate
export (bool) var fromEnemy
var canShoot = true
var enabled = false
var id_upgrade = 4
onready var upgrade = Global.get_upgrade_by_id(id_upgrade)
var damage = 1

func calculate_damage():
	if !fromEnemy:
		damage += upgrade[\"level\"] * 2
	pass

func calculate_firerate():
	fireRate = rand_range(minFireRate,maxFireRate)
	pass

func set_active(val):
	enabled = val
	if val:
		calculate_firerate()
		calculate_damage()
		$HoverShoot.wait_time = fireRate
	pass

func _process(delta):
	if enabled:
		shoot()
	pass

func shoot():
	if canShoot:
		canShoot = false
		var hm = homingMissile.instance()
		get_tree().root.call_deferred(\"add_child\",hm)
		hm.shoot(damage,fromEnemy)
		hm.global_position = $Pos.global_position
		$HoverShoot.start()
	pass

func _on_HoverShoot_timeout():
	canShoot = true
	pass # replace with function body
"
_sections_unfolded = [ "Resource" ]

[node name="HomingShooter" type="Node2D" index="0"]

script = SubResource( 1 )
homingMissile = ExtResource( 1 )
minFireRate = null
maxFireRate = null
fromEnemy = null

[node name="HoverShoot" type="Timer" parent="." index="0"]

process_mode = 1
wait_time = 1.0
one_shot = true
autostart = false

[node name="Pos" type="Position2D" parent="." index="1"]

[connection signal="timeout" from="HoverShoot" to="." method="_on_HoverShoot_timeout"]


